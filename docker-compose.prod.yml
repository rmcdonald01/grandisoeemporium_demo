version: "3.7"

networks:
  default:
    external:
      name: nginx-proxy
  lifestyletech_fiance:

services:
  nginx:
    image: nginx:stable-alpine
    container_name: "nginx_ssl_${PROJECT_NAME}"
    expose:
      - 80
      - 443
    volumes:
      - ./src:/var/www/html
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    environment:
      VIRTUAL_HOST: "${VIRTUAL_HOST}"
      LETSENCRYPT_HOST: "${LETSENCRYPT_HOST}"
      LETSENCRYPT_EMAIL: "${LETSENCRYPT_EMAIL}"
    depends_on:
      - php
      - mysql
    networks:
      - "${NETWORK}"
      - default

  mysql:
    image: mysql:5.7.22
    container_name: "mysql_${PROJECT_NAME}"
    restart: unless-stopped
    tty: true
    ports:
      - "${DB_PORT}:3306"
    volumes:
      - ./mysql:/var/lib/mysql
    environment:
      MYSQL_DATABASE: "${MYSQL_DATABASE}"
      MYSQL_USER: "${MYSQL_USER}"
      MYSQL_PASSWORD: "${MYSQL_PASSWORD}"
      MYSQL_ROOT_PASSWORD: "${MYSQL_ROOT_PASSWORD}"
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    networks:
      - "${NETWORK}"
      - default

  php:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: "php_${PROJECT_NAME}"
    volumes:
      - ./src:/var/www/html
    ports:
      - "${PHP_PORT}:9000"
    networks:
      - "${NETWORK}"
      - default

  composer:
    image: composer:latest
    container_name: "composer_${PROJECT_NAME}"
    volumes:
      - ./src:/var/www/html
    working_dir: /var/www/html
    networks:
      - "${NETWORK}"
      - default
  npm:
    image: node:latest
    container_name: "npm_${PROJECT_NAME}"
    volumes:
      - ./src:/var/www/html
    working_dir: /var/www/html
    entrypoint: ["npm"]
    networks:
      - "${NETWORK}"

  artisan:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: "artisan_${PROJECT_NAME}"
    volumes:
      - ./src:/var/www/html
    depends_on:
      - mysql
    working_dir: /var/www/html
    entrypoint: ["/var/www/html/artisan"]
    networks:
      - "${NETWORK}"
